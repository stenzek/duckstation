name: ðŸ“¦ Linux Flatpak

on:
  workflow_call:
    inputs:
      flathub_publish:
        required: false
        type: boolean
        default: false
      flathub_branch:
        required: false
        type: string
        default: "stable"
  workflow_dispatch:

jobs:
  linux-flatpak-build:
    name: "Build"
    strategy:
      fail-fast: true
      matrix:
        setup: [{arch: "x86_64", runner: "ubuntu-22.04"}, {arch: "aarch64", runner: "ubuntu-24.04-arm"}]

    runs-on: ${{ matrix.setup.runner }}
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:kde-6.9
      options: --privileged
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
        set-safe-directory: ${{ env.GITHUB_WORKSPACE }}

    # Work around container ownership issue
    - name: Set Safe Directory
      shell: bash
      run: git config --global --add safe.directory "*"

    - name: Set Build Tags
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      run: |
        echo '#pragma once' > src/scmversion/tag.h
        echo '#define SCM_RELEASE_TAGS {"latest", "preview"}' >> src/scmversion/tag.h

    - name: Tag as Preview Release
      if: github.ref == 'refs/heads/master'
      run: |
        echo '#define SCM_RELEASE_TAG "preview"' >> src/scmversion/tag.h

    - name: Tag as Rolling Release
      if: github.ref == 'refs/heads/dev'
      run: |
        echo '#define SCM_RELEASE_TAG "latest"' >> src/scmversion/tag.h

    - name: Download Patch Archives
      shell: bash
      run: |
        cd data/resources
        curl -LO "https://github.com/duckstation/chtdb/releases/download/latest/cheats.zip"
        curl -LO "https://github.com/duckstation/chtdb/releases/download/latest/patches.zip"

    - name: Generate AppStream XML
      run: |
        scripts/packaging/generate-metainfo.sh scripts/packaging/flatpak
        cat scripts/packaging/flatpak/org.duckstation.DuckStation.metainfo.xml

    - name: Validate AppStream XML
      run: flatpak-builder-lint appstream scripts/packaging/flatpak/org.duckstation.DuckStation.metainfo.xml

    - name: Validate Manifest
      run: flatpak-builder-lint manifest scripts/packaging/flatpak/org.duckstation.DuckStation.yaml

    - name: Build Flatpak
      uses: flatpak/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: duckstation-${{ matrix.setup.arch }}.flatpak
        upload-artifact: false
        manifest-path: scripts/packaging/flatpak/org.duckstation.DuckStation.yaml
        arch: ${{ matrix.setup.arch }}
        build-bundle: true
        verbose: true
        mirror-screenshots-url: https://dl.flathub.org/media
        branch: stable
        cache: true
        restore-cache: true
        cache-key: flatpak-${{ hashFiles('scripts/packaging/flatpak/org.duckstation.DuckStation.yaml', 'scripts/deps/build-dependencies-linux.sh') }}

    - name: Validate Build
      run: |
        flatpak-builder-lint repo repo

    - name: Push To Flathub Beta
      if: inputs.flathub_publish && inputs.flathub_branch == 'beta'
      uses: flatpak/flatpak-github-actions/flat-manager@v6
      with:
        flat-manager-url: https://hub.flathub.org/
        repository: stable
        token: ${{ secrets.FLATHUB_BETA_TOKEN }}
        build-log-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - name: Push To Flathub Stable
      if: inputs.flathub_publish && inputs.flathub_branch == 'stable'
      uses: flatpak/flatpak-github-actions/flat-manager@v6
      with:
        flat-manager-url: https://hub.flathub.org/
        repository: stable
        token: ${{ secrets.FLATHUB_STABLE_TOKEN }}
        build-log-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - name: Upload Flatpak
      uses: actions/upload-artifact@v4
      with:
        name: "linux-flatpak-${{ matrix.setup.arch }}"
        path: "duckstation-${{ matrix.setup.arch }}.flatpak"
